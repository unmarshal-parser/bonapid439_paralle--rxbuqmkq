// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class BatchSizeLimitSet extends ethereum.Event {
  get params(): BatchSizeLimitSet__Params {
    return new BatchSizeLimitSet__Params(this);
  }
}

export class BatchSizeLimitSet__Params {
  _event: BatchSizeLimitSet;

  constructor(event: BatchSizeLimitSet) {
    this._event = event;
  }

  get batchSizeLimit(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MessageFailed extends ethereum.Event {
  get params(): MessageFailed__Params {
    return new MessageFailed__Params(this);
  }
}

export class MessageFailed__Params {
  _event: MessageFailed;

  constructor(event: MessageFailed) {
    this._event = event;
  }

  get _srcChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _nonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _payload(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get _reason(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class OperatorFilterRegistryAddressUpdated extends ethereum.Event {
  get params(): OperatorFilterRegistryAddressUpdated__Params {
    return new OperatorFilterRegistryAddressUpdated__Params(this);
  }
}

export class OperatorFilterRegistryAddressUpdated__Params {
  _event: OperatorFilterRegistryAddressUpdated;

  constructor(event: OperatorFilterRegistryAddressUpdated) {
    this._event = event;
  }

  get newRegistry(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OperatorFilterRegistryRevoked extends ethereum.Event {
  get params(): OperatorFilterRegistryRevoked__Params {
    return new OperatorFilterRegistryRevoked__Params(this);
  }
}

export class OperatorFilterRegistryRevoked__Params {
  _event: OperatorFilterRegistryRevoked;

  constructor(event: OperatorFilterRegistryRevoked) {
    this._event = event;
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PrimeSet extends ethereum.Event {
  get params(): PrimeSet__Params {
    return new PrimeSet__Params(this);
  }
}

export class PrimeSet__Params {
  _event: PrimeSet;

  constructor(event: PrimeSet) {
    this._event = event;
  }

  get prime(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ReceiveBatchFromChain extends ethereum.Event {
  get params(): ReceiveBatchFromChain__Params {
    return new ReceiveBatchFromChain__Params(this);
  }
}

export class ReceiveBatchFromChain__Params {
  _event: ReceiveBatchFromChain;

  constructor(event: ReceiveBatchFromChain) {
    this._event = event;
  }

  get _srcChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _toAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _tokenIds(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get _amounts(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class ReceiveFromChain extends ethereum.Event {
  get params(): ReceiveFromChain__Params {
    return new ReceiveFromChain__Params(this);
  }
}

export class ReceiveFromChain__Params {
  _event: ReceiveFromChain;

  constructor(event: ReceiveFromChain) {
    this._event = event;
  }

  get _srcChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _toAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class RetryMessageSuccess extends ethereum.Event {
  get params(): RetryMessageSuccess__Params {
    return new RetryMessageSuccess__Params(this);
  }
}

export class RetryMessageSuccess__Params {
  _event: RetryMessageSuccess;

  constructor(event: RetryMessageSuccess) {
    this._event = event;
  }

  get _srcChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get _nonce(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _payloadHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class SendBatchToChain extends ethereum.Event {
  get params(): SendBatchToChain__Params {
    return new SendBatchToChain__Params(this);
  }
}

export class SendBatchToChain__Params {
  _event: SendBatchToChain;

  constructor(event: SendBatchToChain) {
    this._event = event;
  }

  get _dstChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _toAddress(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _tokenIds(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get _amounts(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class SendToChain extends ethereum.Event {
  get params(): SendToChain__Params {
    return new SendToChain__Params(this);
  }
}

export class SendToChain__Params {
  _event: SendToChain;

  constructor(event: SendToChain) {
    this._event = event;
  }

  get _dstChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _toAddress(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class SetMinDstGas extends ethereum.Event {
  get params(): SetMinDstGas__Params {
    return new SetMinDstGas__Params(this);
  }
}

export class SetMinDstGas__Params {
  _event: SetMinDstGas;

  constructor(event: SetMinDstGas) {
    this._event = event;
  }

  get _dstChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _type(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get _minDstGas(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetPrecrime extends ethereum.Event {
  get params(): SetPrecrime__Params {
    return new SetPrecrime__Params(this);
  }
}

export class SetPrecrime__Params {
  _event: SetPrecrime;

  constructor(event: SetPrecrime) {
    this._event = event;
  }

  get precrime(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetTrustedRemote extends ethereum.Event {
  get params(): SetTrustedRemote__Params {
    return new SetTrustedRemote__Params(this);
  }
}

export class SetTrustedRemote__Params {
  _event: SetTrustedRemote;

  constructor(event: SetTrustedRemote) {
    this._event = event;
  }

  get _remoteChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _path(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class SetTrustedRemoteAddress extends ethereum.Event {
  get params(): SetTrustedRemoteAddress__Params {
    return new SetTrustedRemoteAddress__Params(this);
  }
}

export class SetTrustedRemoteAddress__Params {
  _event: SetTrustedRemoteAddress;

  constructor(event: SetTrustedRemoteAddress) {
    this._event = event;
  }

  get _remoteChainId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _remoteAddress(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class SetUseCustomAdapterParams extends ethereum.Event {
  get params(): SetUseCustomAdapterParams__Params {
    return new SetUseCustomAdapterParams__Params(this);
  }
}

export class SetUseCustomAdapterParams__Params {
  _event: SetUseCustomAdapterParams;

  constructor(event: SetUseCustomAdapterParams) {
    this._event = event;
  }

  get _useCustomAdapterParams(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class SpendGatewayRegistered extends ethereum.Event {
  get params(): SpendGatewayRegistered__Params {
    return new SpendGatewayRegistered__Params(this);
  }
}

export class SpendGatewayRegistered__Params {
  _event: SpendGatewayRegistered;

  constructor(event: SpendGatewayRegistered) {
    this._event = event;
  }

  get handler(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftDestinationAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get nativeTokenDestinationAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get primeDestinationAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class SpendInvoked extends ethereum.Event {
  get params(): SpendInvoked__Params {
    return new SpendInvoked__Params(this);
  }
}

export class SpendInvoked__Params {
  _event: SpendInvoked;

  constructor(event: SpendInvoked) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftDestination(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get nativeDestination(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get primeDestination(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _tokenIds(): Array<BigInt> {
    return this._event.parameters[5].value.toBigIntArray();
  }

  get _amounts(): Array<BigInt> {
    return this._event.parameters[6].value.toBigIntArray();
  }

  get nativeValue(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get primeValue(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get data(): Bytes {
    return this._event.parameters[9].value.toBytes();
  }
}

export class TransferBatch extends ethereum.Event {
  get params(): TransferBatch__Params {
    return new TransferBatch__Params(this);
  }
}

export class TransferBatch__Params {
  _event: TransferBatch;

  constructor(event: TransferBatch) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class TransferSingle extends ethereum.Event {
  get params(): TransferSingle__Params {
    return new TransferSingle__Params(this);
  }
}

export class TransferSingle__Params {
  _event: TransferSingle;

  constructor(event: TransferSingle) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class TrustedForwarderSet extends ethereum.Event {
  get params(): TrustedForwarderSet__Params {
    return new TrustedForwarderSet__Params(this);
  }
}

export class TrustedForwarderSet__Params {
  _event: TrustedForwarderSet;

  constructor(event: TrustedForwarderSet) {
    this._event = event;
  }

  get forwarder(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class URI extends ethereum.Event {
  get params(): URI__Params {
    return new URI__Params(this);
  }
}

export class URI__Params {
  _event: URI;

  constructor(event: URI) {
    this._event = event;
  }

  get value(): string {
    return this._event.parameters[0].value.toString();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Contract__estimateSendBatchFeeResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getNativeFee(): BigInt {
    return this.value0;
  }

  getZroFee(): BigInt {
    return this.value1;
  }
}

export class Contract__estimateSendFeeResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getNativeFee(): BigInt {
    return this.value0;
  }

  getZroFee(): BigInt {
    return this.value1;
  }
}

export class Contract__spendGatewaysResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: Address;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    return map;
  }

  getNftDestinationAddress(): Address {
    return this.value0;
  }

  getNativeDestinationAddress(): Address {
    return this.value1;
  }

  getPrimeDestinationAddress(): Address {
    return this.value2;
  }

  getInvokeSpendHandler(): Address {
    return this.value3;
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  DEFAULT_PAYLOAD_SIZE_LIMIT(): BigInt {
    let result = super.call(
      "DEFAULT_PAYLOAD_SIZE_LIMIT",
      "DEFAULT_PAYLOAD_SIZE_LIMIT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_DEFAULT_PAYLOAD_SIZE_LIMIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "DEFAULT_PAYLOAD_SIZE_LIMIT",
      "DEFAULT_PAYLOAD_SIZE_LIMIT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  FUNCTION_TYPE_SEND(): i32 {
    let result = super.call(
      "FUNCTION_TYPE_SEND",
      "FUNCTION_TYPE_SEND():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_FUNCTION_TYPE_SEND(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "FUNCTION_TYPE_SEND",
      "FUNCTION_TYPE_SEND():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  FUNCTION_TYPE_SEND_BATCH(): i32 {
    let result = super.call(
      "FUNCTION_TYPE_SEND_BATCH",
      "FUNCTION_TYPE_SEND_BATCH():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_FUNCTION_TYPE_SEND_BATCH(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "FUNCTION_TYPE_SEND_BATCH",
      "FUNCTION_TYPE_SEND_BATCH():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  NO_EXTRA_GAS(): BigInt {
    let result = super.call("NO_EXTRA_GAS", "NO_EXTRA_GAS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_NO_EXTRA_GAS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("NO_EXTRA_GAS", "NO_EXTRA_GAS():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(account: Address, id: BigInt): BigInt {
    let result = super.call(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address, id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfBatch(accounts: Array<Address>, ids: Array<BigInt>): Array<BigInt> {
    let result = super.call(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_balanceOfBatch(
    accounts: Array<Address>,
    ids: Array<BigInt>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  batchSizeLimit(): BigInt {
    let result = super.call("batchSizeLimit", "batchSizeLimit():(uint256)", []);

    return result[0].toBigInt();
  }

  try_batchSizeLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "batchSizeLimit",
      "batchSizeLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  estimateSendBatchFee(
    _dstChainId: i32,
    _toAddress: Bytes,
    _tokenIds: Array<BigInt>,
    _amounts: Array<BigInt>,
    _useZro: boolean,
    _adapterParams: Bytes
  ): Contract__estimateSendBatchFeeResult {
    let result = super.call(
      "estimateSendBatchFee",
      "estimateSendBatchFee(uint16,bytes,uint256[],uint256[],bool,bytes):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_dstChainId)),
        ethereum.Value.fromBytes(_toAddress),
        ethereum.Value.fromUnsignedBigIntArray(_tokenIds),
        ethereum.Value.fromUnsignedBigIntArray(_amounts),
        ethereum.Value.fromBoolean(_useZro),
        ethereum.Value.fromBytes(_adapterParams)
      ]
    );

    return new Contract__estimateSendBatchFeeResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_estimateSendBatchFee(
    _dstChainId: i32,
    _toAddress: Bytes,
    _tokenIds: Array<BigInt>,
    _amounts: Array<BigInt>,
    _useZro: boolean,
    _adapterParams: Bytes
  ): ethereum.CallResult<Contract__estimateSendBatchFeeResult> {
    let result = super.tryCall(
      "estimateSendBatchFee",
      "estimateSendBatchFee(uint16,bytes,uint256[],uint256[],bool,bytes):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_dstChainId)),
        ethereum.Value.fromBytes(_toAddress),
        ethereum.Value.fromUnsignedBigIntArray(_tokenIds),
        ethereum.Value.fromUnsignedBigIntArray(_amounts),
        ethereum.Value.fromBoolean(_useZro),
        ethereum.Value.fromBytes(_adapterParams)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__estimateSendBatchFeeResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  estimateSendFee(
    _dstChainId: i32,
    _toAddress: Bytes,
    _tokenId: BigInt,
    _amount: BigInt,
    _useZro: boolean,
    _adapterParams: Bytes
  ): Contract__estimateSendFeeResult {
    let result = super.call(
      "estimateSendFee",
      "estimateSendFee(uint16,bytes,uint256,uint256,bool,bytes):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_dstChainId)),
        ethereum.Value.fromBytes(_toAddress),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromBoolean(_useZro),
        ethereum.Value.fromBytes(_adapterParams)
      ]
    );

    return new Contract__estimateSendFeeResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_estimateSendFee(
    _dstChainId: i32,
    _toAddress: Bytes,
    _tokenId: BigInt,
    _amount: BigInt,
    _useZro: boolean,
    _adapterParams: Bytes
  ): ethereum.CallResult<Contract__estimateSendFeeResult> {
    let result = super.tryCall(
      "estimateSendFee",
      "estimateSendFee(uint16,bytes,uint256,uint256,bool,bytes):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_dstChainId)),
        ethereum.Value.fromBytes(_toAddress),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromBoolean(_useZro),
        ethereum.Value.fromBytes(_adapterParams)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__estimateSendFeeResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  failedMessages(param0: i32, param1: Bytes, param2: BigInt): Bytes {
    let result = super.call(
      "failedMessages",
      "failedMessages(uint16,bytes,uint64):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
        ethereum.Value.fromBytes(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );

    return result[0].toBytes();
  }

  try_failedMessages(
    param0: i32,
    param1: Bytes,
    param2: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "failedMessages",
      "failedMessages(uint16,bytes,uint64):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
        ethereum.Value.fromBytes(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getConfig(
    _version: i32,
    _chainId: i32,
    param2: Address,
    _configType: BigInt
  ): Bytes {
    let result = super.call(
      "getConfig",
      "getConfig(uint16,uint16,address,uint256):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_version)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_chainId)),
        ethereum.Value.fromAddress(param2),
        ethereum.Value.fromUnsignedBigInt(_configType)
      ]
    );

    return result[0].toBytes();
  }

  try_getConfig(
    _version: i32,
    _chainId: i32,
    param2: Address,
    _configType: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getConfig",
      "getConfig(uint16,uint16,address,uint256):(bytes)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_version)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_chainId)),
        ethereum.Value.fromAddress(param2),
        ethereum.Value.fromUnsignedBigInt(_configType)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getTrustedForwarder(): Address {
    let result = super.call(
      "getTrustedForwarder",
      "getTrustedForwarder():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getTrustedForwarder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getTrustedForwarder",
      "getTrustedForwarder():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTrustedRemoteAddress(_remoteChainId: i32): Bytes {
    let result = super.call(
      "getTrustedRemoteAddress",
      "getTrustedRemoteAddress(uint16):(bytes)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_remoteChainId))]
    );

    return result[0].toBytes();
  }

  try_getTrustedRemoteAddress(_remoteChainId: i32): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getTrustedRemoteAddress",
      "getTrustedRemoteAddress(uint16):(bytes)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_remoteChainId))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isApprovedForAll(account: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    account: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOperatorFilterRegistryRevoked(): boolean {
    let result = super.call(
      "isOperatorFilterRegistryRevoked",
      "isOperatorFilterRegistryRevoked():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_isOperatorFilterRegistryRevoked(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOperatorFilterRegistryRevoked",
      "isOperatorFilterRegistryRevoked():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTrustedRemote(_srcChainId: i32, _srcAddress: Bytes): boolean {
    let result = super.call(
      "isTrustedRemote",
      "isTrustedRemote(uint16,bytes):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_srcChainId)),
        ethereum.Value.fromBytes(_srcAddress)
      ]
    );

    return result[0].toBoolean();
  }

  try_isTrustedRemote(
    _srcChainId: i32,
    _srcAddress: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedRemote",
      "isTrustedRemote(uint16,bytes):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_srcChainId)),
        ethereum.Value.fromBytes(_srcAddress)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lzEndpoint(): Address {
    let result = super.call("lzEndpoint", "lzEndpoint():(address)", []);

    return result[0].toAddress();
  }

  try_lzEndpoint(): ethereum.CallResult<Address> {
    let result = super.tryCall("lzEndpoint", "lzEndpoint():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  minDstGasLookup(param0: i32, param1: i32): BigInt {
    let result = super.call(
      "minDstGasLookup",
      "minDstGasLookup(uint16,uint16):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param1))
      ]
    );

    return result[0].toBigInt();
  }

  try_minDstGasLookup(param0: i32, param1: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minDstGasLookup",
      "minDstGasLookup(uint16,uint16):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param1))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  operatorFilterRegistry(): Address {
    let result = super.call(
      "operatorFilterRegistry",
      "operatorFilterRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_operatorFilterRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "operatorFilterRegistry",
      "operatorFilterRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  payloadSizeLimitLookup(param0: i32): BigInt {
    let result = super.call(
      "payloadSizeLimitLookup",
      "payloadSizeLimitLookup(uint16):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );

    return result[0].toBigInt();
  }

  try_payloadSizeLimitLookup(param0: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "payloadSizeLimitLookup",
      "payloadSizeLimitLookup(uint16):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  precrime(): Address {
    let result = super.call("precrime", "precrime():(address)", []);

    return result[0].toAddress();
  }

  try_precrime(): ethereum.CallResult<Address> {
    let result = super.tryCall("precrime", "precrime():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  prime(): Address {
    let result = super.call("prime", "prime():(address)", []);

    return result[0].toAddress();
  }

  try_prime(): ethereum.CallResult<Address> {
    let result = super.tryCall("prime", "prime():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  spendGateways(param0: BigInt): Contract__spendGatewaysResult {
    let result = super.call(
      "spendGateways",
      "spendGateways(uint256):(address,address,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Contract__spendGatewaysResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toAddress()
    );
  }

  try_spendGateways(
    param0: BigInt
  ): ethereum.CallResult<Contract__spendGatewaysResult> {
    let result = super.tryCall(
      "spendGateways",
      "spendGateways(uint256):(address,address,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__spendGatewaysResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toAddress()
      )
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  trustedRemoteLookup(param0: i32): Bytes {
    let result = super.call(
      "trustedRemoteLookup",
      "trustedRemoteLookup(uint16):(bytes)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );

    return result[0].toBytes();
  }

  try_trustedRemoteLookup(param0: i32): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "trustedRemoteLookup",
      "trustedRemoteLookup(uint16):(bytes)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  uri(_tokenId: BigInt): string {
    let result = super.call("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_uri(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  useCustomAdapterParams(): boolean {
    let result = super.call(
      "useCustomAdapterParams",
      "useCustomAdapterParams():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_useCustomAdapterParams(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "useCustomAdapterParams",
      "useCustomAdapterParams():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _lzEndpoint(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _forwarder(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ForceResumeReceiveCall extends ethereum.Call {
  get inputs(): ForceResumeReceiveCall__Inputs {
    return new ForceResumeReceiveCall__Inputs(this);
  }

  get outputs(): ForceResumeReceiveCall__Outputs {
    return new ForceResumeReceiveCall__Outputs(this);
  }
}

export class ForceResumeReceiveCall__Inputs {
  _call: ForceResumeReceiveCall;

  constructor(call: ForceResumeReceiveCall) {
    this._call = call;
  }

  get _srcChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ForceResumeReceiveCall__Outputs {
  _call: ForceResumeReceiveCall;

  constructor(call: ForceResumeReceiveCall) {
    this._call = call;
  }
}

export class InvokeSpendCall extends ethereum.Call {
  get inputs(): InvokeSpendCall__Inputs {
    return new InvokeSpendCall__Inputs(this);
  }

  get outputs(): InvokeSpendCall__Outputs {
    return new InvokeSpendCall__Outputs(this);
  }
}

export class InvokeSpendCall__Inputs {
  _call: InvokeSpendCall;

  constructor(call: InvokeSpendCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _primeValue(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class InvokeSpendCall__Outputs {
  _call: InvokeSpendCall;

  constructor(call: InvokeSpendCall) {
    this._call = call;
  }
}

export class LzReceiveCall extends ethereum.Call {
  get inputs(): LzReceiveCall__Inputs {
    return new LzReceiveCall__Inputs(this);
  }

  get outputs(): LzReceiveCall__Outputs {
    return new LzReceiveCall__Outputs(this);
  }
}

export class LzReceiveCall__Inputs {
  _call: LzReceiveCall;

  constructor(call: LzReceiveCall) {
    this._call = call;
  }

  get _srcChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _nonce(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _payload(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class LzReceiveCall__Outputs {
  _call: LzReceiveCall;

  constructor(call: LzReceiveCall) {
    this._call = call;
  }
}

export class NonblockingLzReceiveCall extends ethereum.Call {
  get inputs(): NonblockingLzReceiveCall__Inputs {
    return new NonblockingLzReceiveCall__Inputs(this);
  }

  get outputs(): NonblockingLzReceiveCall__Outputs {
    return new NonblockingLzReceiveCall__Outputs(this);
  }
}

export class NonblockingLzReceiveCall__Inputs {
  _call: NonblockingLzReceiveCall;

  constructor(call: NonblockingLzReceiveCall) {
    this._call = call;
  }

  get _srcChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _nonce(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _payload(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class NonblockingLzReceiveCall__Outputs {
  _call: NonblockingLzReceiveCall;

  constructor(call: NonblockingLzReceiveCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RetryMessageCall extends ethereum.Call {
  get inputs(): RetryMessageCall__Inputs {
    return new RetryMessageCall__Inputs(this);
  }

  get outputs(): RetryMessageCall__Outputs {
    return new RetryMessageCall__Outputs(this);
  }
}

export class RetryMessageCall__Inputs {
  _call: RetryMessageCall;

  constructor(call: RetryMessageCall) {
    this._call = call;
  }

  get _srcChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _srcAddress(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _nonce(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _payload(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class RetryMessageCall__Outputs {
  _call: RetryMessageCall;

  constructor(call: RetryMessageCall) {
    this._call = call;
  }
}

export class RevokeOperatorFilterRegistryCall extends ethereum.Call {
  get inputs(): RevokeOperatorFilterRegistryCall__Inputs {
    return new RevokeOperatorFilterRegistryCall__Inputs(this);
  }

  get outputs(): RevokeOperatorFilterRegistryCall__Outputs {
    return new RevokeOperatorFilterRegistryCall__Outputs(this);
  }
}

export class RevokeOperatorFilterRegistryCall__Inputs {
  _call: RevokeOperatorFilterRegistryCall;

  constructor(call: RevokeOperatorFilterRegistryCall) {
    this._call = call;
  }
}

export class RevokeOperatorFilterRegistryCall__Outputs {
  _call: RevokeOperatorFilterRegistryCall;

  constructor(call: RevokeOperatorFilterRegistryCall) {
    this._call = call;
  }
}

export class SafeBatchTransferFromCall extends ethereum.Call {
  get inputs(): SafeBatchTransferFromCall__Inputs {
    return new SafeBatchTransferFromCall__Inputs(this);
  }

  get outputs(): SafeBatchTransferFromCall__Outputs {
    return new SafeBatchTransferFromCall__Outputs(this);
  }
}

export class SafeBatchTransferFromCall__Inputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeBatchTransferFromCall__Outputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SendBatchFromCall extends ethereum.Call {
  get inputs(): SendBatchFromCall__Inputs {
    return new SendBatchFromCall__Inputs(this);
  }

  get outputs(): SendBatchFromCall__Outputs {
    return new SendBatchFromCall__Outputs(this);
  }
}

export class SendBatchFromCall__Inputs {
  _call: SendBatchFromCall;

  constructor(call: SendBatchFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _dstChainId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _toAddress(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _tokenIds(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get _refundAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _zroPaymentAddress(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _adapterParams(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class SendBatchFromCall__Outputs {
  _call: SendBatchFromCall;

  constructor(call: SendBatchFromCall) {
    this._call = call;
  }
}

export class SendFromCall extends ethereum.Call {
  get inputs(): SendFromCall__Inputs {
    return new SendFromCall__Inputs(this);
  }

  get outputs(): SendFromCall__Outputs {
    return new SendFromCall__Outputs(this);
  }
}

export class SendFromCall__Inputs {
  _call: SendFromCall;

  constructor(call: SendFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _dstChainId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _toAddress(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _refundAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _zroPaymentAddress(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _adapterParams(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class SendFromCall__Outputs {
  _call: SendFromCall;

  constructor(call: SendFromCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetBatchSizeLimitCall extends ethereum.Call {
  get inputs(): SetBatchSizeLimitCall__Inputs {
    return new SetBatchSizeLimitCall__Inputs(this);
  }

  get outputs(): SetBatchSizeLimitCall__Outputs {
    return new SetBatchSizeLimitCall__Outputs(this);
  }
}

export class SetBatchSizeLimitCall__Inputs {
  _call: SetBatchSizeLimitCall;

  constructor(call: SetBatchSizeLimitCall) {
    this._call = call;
  }

  get _batchSizeLimit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBatchSizeLimitCall__Outputs {
  _call: SetBatchSizeLimitCall;

  constructor(call: SetBatchSizeLimitCall) {
    this._call = call;
  }
}

export class SetConfigCall extends ethereum.Call {
  get inputs(): SetConfigCall__Inputs {
    return new SetConfigCall__Inputs(this);
  }

  get outputs(): SetConfigCall__Outputs {
    return new SetConfigCall__Outputs(this);
  }
}

export class SetConfigCall__Inputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }

  get _version(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _chainId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _configType(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _config(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SetConfigCall__Outputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }
}

export class SetGatewayCall extends ethereum.Call {
  get inputs(): SetGatewayCall__Inputs {
    return new SetGatewayCall__Inputs(this);
  }

  get outputs(): SetGatewayCall__Outputs {
    return new SetGatewayCall__Outputs(this);
  }
}

export class SetGatewayCall__Inputs {
  _call: SetGatewayCall;

  constructor(call: SetGatewayCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _nftDestinationAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _nativeDestinationAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _primeDestinationAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _invokeSpendHandler(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class SetGatewayCall__Outputs {
  _call: SetGatewayCall;

  constructor(call: SetGatewayCall) {
    this._call = call;
  }
}

export class SetMinDstGasCall extends ethereum.Call {
  get inputs(): SetMinDstGasCall__Inputs {
    return new SetMinDstGasCall__Inputs(this);
  }

  get outputs(): SetMinDstGasCall__Outputs {
    return new SetMinDstGasCall__Outputs(this);
  }
}

export class SetMinDstGasCall__Inputs {
  _call: SetMinDstGasCall;

  constructor(call: SetMinDstGasCall) {
    this._call = call;
  }

  get _dstChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _packetType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _minGas(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetMinDstGasCall__Outputs {
  _call: SetMinDstGasCall;

  constructor(call: SetMinDstGasCall) {
    this._call = call;
  }
}

export class SetPayloadSizeLimitCall extends ethereum.Call {
  get inputs(): SetPayloadSizeLimitCall__Inputs {
    return new SetPayloadSizeLimitCall__Inputs(this);
  }

  get outputs(): SetPayloadSizeLimitCall__Outputs {
    return new SetPayloadSizeLimitCall__Outputs(this);
  }
}

export class SetPayloadSizeLimitCall__Inputs {
  _call: SetPayloadSizeLimitCall;

  constructor(call: SetPayloadSizeLimitCall) {
    this._call = call;
  }

  get _dstChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _size(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetPayloadSizeLimitCall__Outputs {
  _call: SetPayloadSizeLimitCall;

  constructor(call: SetPayloadSizeLimitCall) {
    this._call = call;
  }
}

export class SetPrecrimeCall extends ethereum.Call {
  get inputs(): SetPrecrimeCall__Inputs {
    return new SetPrecrimeCall__Inputs(this);
  }

  get outputs(): SetPrecrimeCall__Outputs {
    return new SetPrecrimeCall__Outputs(this);
  }
}

export class SetPrecrimeCall__Inputs {
  _call: SetPrecrimeCall;

  constructor(call: SetPrecrimeCall) {
    this._call = call;
  }

  get _precrime(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPrecrimeCall__Outputs {
  _call: SetPrecrimeCall;

  constructor(call: SetPrecrimeCall) {
    this._call = call;
  }
}

export class SetPrimeCall extends ethereum.Call {
  get inputs(): SetPrimeCall__Inputs {
    return new SetPrimeCall__Inputs(this);
  }

  get outputs(): SetPrimeCall__Outputs {
    return new SetPrimeCall__Outputs(this);
  }
}

export class SetPrimeCall__Inputs {
  _call: SetPrimeCall;

  constructor(call: SetPrimeCall) {
    this._call = call;
  }

  get _prime(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPrimeCall__Outputs {
  _call: SetPrimeCall;

  constructor(call: SetPrimeCall) {
    this._call = call;
  }
}

export class SetReceiveVersionCall extends ethereum.Call {
  get inputs(): SetReceiveVersionCall__Inputs {
    return new SetReceiveVersionCall__Inputs(this);
  }

  get outputs(): SetReceiveVersionCall__Outputs {
    return new SetReceiveVersionCall__Outputs(this);
  }
}

export class SetReceiveVersionCall__Inputs {
  _call: SetReceiveVersionCall;

  constructor(call: SetReceiveVersionCall) {
    this._call = call;
  }

  get _version(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetReceiveVersionCall__Outputs {
  _call: SetReceiveVersionCall;

  constructor(call: SetReceiveVersionCall) {
    this._call = call;
  }
}

export class SetSendVersionCall extends ethereum.Call {
  get inputs(): SetSendVersionCall__Inputs {
    return new SetSendVersionCall__Inputs(this);
  }

  get outputs(): SetSendVersionCall__Outputs {
    return new SetSendVersionCall__Outputs(this);
  }
}

export class SetSendVersionCall__Inputs {
  _call: SetSendVersionCall;

  constructor(call: SetSendVersionCall) {
    this._call = call;
  }

  get _version(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetSendVersionCall__Outputs {
  _call: SetSendVersionCall;

  constructor(call: SetSendVersionCall) {
    this._call = call;
  }
}

export class SetTrustedForwarderCall extends ethereum.Call {
  get inputs(): SetTrustedForwarderCall__Inputs {
    return new SetTrustedForwarderCall__Inputs(this);
  }

  get outputs(): SetTrustedForwarderCall__Outputs {
    return new SetTrustedForwarderCall__Outputs(this);
  }
}

export class SetTrustedForwarderCall__Inputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }

  get _forwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTrustedForwarderCall__Outputs {
  _call: SetTrustedForwarderCall;

  constructor(call: SetTrustedForwarderCall) {
    this._call = call;
  }
}

export class SetTrustedRemoteCall extends ethereum.Call {
  get inputs(): SetTrustedRemoteCall__Inputs {
    return new SetTrustedRemoteCall__Inputs(this);
  }

  get outputs(): SetTrustedRemoteCall__Outputs {
    return new SetTrustedRemoteCall__Outputs(this);
  }
}

export class SetTrustedRemoteCall__Inputs {
  _call: SetTrustedRemoteCall;

  constructor(call: SetTrustedRemoteCall) {
    this._call = call;
  }

  get _srcChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _path(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetTrustedRemoteCall__Outputs {
  _call: SetTrustedRemoteCall;

  constructor(call: SetTrustedRemoteCall) {
    this._call = call;
  }
}

export class SetTrustedRemoteAddressCall extends ethereum.Call {
  get inputs(): SetTrustedRemoteAddressCall__Inputs {
    return new SetTrustedRemoteAddressCall__Inputs(this);
  }

  get outputs(): SetTrustedRemoteAddressCall__Outputs {
    return new SetTrustedRemoteAddressCall__Outputs(this);
  }
}

export class SetTrustedRemoteAddressCall__Inputs {
  _call: SetTrustedRemoteAddressCall;

  constructor(call: SetTrustedRemoteAddressCall) {
    this._call = call;
  }

  get _remoteChainId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _remoteAddress(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetTrustedRemoteAddressCall__Outputs {
  _call: SetTrustedRemoteAddressCall;

  constructor(call: SetTrustedRemoteAddressCall) {
    this._call = call;
  }
}

export class SetURICall extends ethereum.Call {
  get inputs(): SetURICall__Inputs {
    return new SetURICall__Inputs(this);
  }

  get outputs(): SetURICall__Outputs {
    return new SetURICall__Outputs(this);
  }
}

export class SetURICall__Inputs {
  _call: SetURICall;

  constructor(call: SetURICall) {
    this._call = call;
  }

  get _uri(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetURICall__Outputs {
  _call: SetURICall;

  constructor(call: SetURICall) {
    this._call = call;
  }
}

export class SetUseCustomAdapterParamsCall extends ethereum.Call {
  get inputs(): SetUseCustomAdapterParamsCall__Inputs {
    return new SetUseCustomAdapterParamsCall__Inputs(this);
  }

  get outputs(): SetUseCustomAdapterParamsCall__Outputs {
    return new SetUseCustomAdapterParamsCall__Outputs(this);
  }
}

export class SetUseCustomAdapterParamsCall__Inputs {
  _call: SetUseCustomAdapterParamsCall;

  constructor(call: SetUseCustomAdapterParamsCall) {
    this._call = call;
  }

  get _useCustomAdapterParams(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetUseCustomAdapterParamsCall__Outputs {
  _call: SetUseCustomAdapterParamsCall;

  constructor(call: SetUseCustomAdapterParamsCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateOperatorFilterRegistryAddressCall extends ethereum.Call {
  get inputs(): UpdateOperatorFilterRegistryAddressCall__Inputs {
    return new UpdateOperatorFilterRegistryAddressCall__Inputs(this);
  }

  get outputs(): UpdateOperatorFilterRegistryAddressCall__Outputs {
    return new UpdateOperatorFilterRegistryAddressCall__Outputs(this);
  }
}

export class UpdateOperatorFilterRegistryAddressCall__Inputs {
  _call: UpdateOperatorFilterRegistryAddressCall;

  constructor(call: UpdateOperatorFilterRegistryAddressCall) {
    this._call = call;
  }

  get newRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateOperatorFilterRegistryAddressCall__Outputs {
  _call: UpdateOperatorFilterRegistryAddressCall;

  constructor(call: UpdateOperatorFilterRegistryAddressCall) {
    this._call = call;
  }
}
